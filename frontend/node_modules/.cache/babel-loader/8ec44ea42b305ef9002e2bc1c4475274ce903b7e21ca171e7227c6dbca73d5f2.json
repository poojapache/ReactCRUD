{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ppach\\\\reactProjects\\\\formProject\\\\frontend\\\\src\\\\Components\\\\Retrieve.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Retrieve() {\n  _s();\n  const [itemList, setItemList] = useState(new Map());\n  useEffect(() => {\n    console.log('Fetching questions');\n    axios.get('http://localhost:8081/getQues/').then(res => {\n      console.log(res);\n      const questions = res.data;\n      questions.map((element, index) => {\n        if (!itemList.has(element.ques_no)) {\n          itemList.set(element.ques_no, {\n            quesNo: element.ques_no,\n            quesText: element.ques_text,\n            quesType: element.ques_type,\n            answerList: []\n          });\n        }\n        itemList.get(element.ques_no).answerList.push({\n          ansNo: element.ans_no,\n          ansText: element.option_text\n        });\n      });\n      setItemList(itemList);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-primary w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: itemList.map((element, index) => /*#__PURE__*/_jsxDEV(Question, {\n          quesNo: element.quesNo,\n          quesText: element.quesText,\n          quesType: element.quesType,\n          answerList: element.answerList\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 1\n  }, this);\n}\n_s(Retrieve, \"dymhM7mSxTuiTZ1i+54aYXXTRy4=\");\n_c = Retrieve;\nexport default Retrieve;\nvar _c;\n$RefreshReg$(_c, \"Retrieve\");","map":{"version":3,"names":["React","useEffect","useState","axios","Question","jsxDEV","_jsxDEV","Retrieve","_s","itemList","setItemList","Map","console","log","get","then","res","questions","data","map","element","index","has","ques_no","set","quesNo","quesText","ques_text","quesType","ques_type","answerList","push","ansNo","ans_no","ansText","option_text","catch","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ppach/reactProjects/formProject/frontend/src/Components/Retrieve.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Question from './Question';\r\n\r\nfunction Retrieve()\r\n{\r\n    const [itemList, setItemList] = useState(new Map());\r\n    useEffect(()=>{\r\n        console.log('Fetching questions');\r\n        axios.get('http://localhost:8081/getQues/')\r\n        .then((res)=>{\r\n            console.log(res);\r\n            const questions = res.data;\r\n            questions.map((element, index)=>{\r\n                if(!itemList.has(element.ques_no))\r\n                {\r\n                        itemList.set(element.ques_no, {\r\n                        quesNo:element.ques_no,\r\n                        quesText:element.ques_text,\r\n                        quesType:element.ques_type,\r\n                        answerList:[]\r\n                    });\r\n                }\r\n                itemList.get(element.ques_no).answerList.push({\r\n                        ansNo:element.ans_no,\r\n                        ansText:element.option_text\r\n                    });\r\n            });\r\n            setItemList(itemList);\r\n        })\r\n        .catch((err)=>console.log(err));\r\n       \r\n    },[]);\r\nreturn(\r\n    \r\n<div>\r\n    <table className='table table-primary w-100'>\r\n        <tbody>\r\n        {itemList.map((element, index)=>(<Question key={index} quesNo = {element.quesNo} quesText = {element.quesText} quesType = {element.quesType} answerList={element.answerList}/>))}\r\n        </tbody>\r\n    </table>\r\n</div>);\r\n}\r\n\r\nexport default Retrieve;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EACjB;EAAAC,EAAA;EACI,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAIS,GAAG,CAAC,CAAC,CAAC;EACnDV,SAAS,CAAC,MAAI;IACVW,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjCV,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC,CAC1CC,IAAI,CAAEC,GAAG,IAAG;MACTJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAChB,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI;MAC1BD,SAAS,CAACE,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAG;QAC5B,IAAG,CAACZ,QAAQ,CAACa,GAAG,CAACF,OAAO,CAACG,OAAO,CAAC,EACjC;UACQd,QAAQ,CAACe,GAAG,CAACJ,OAAO,CAACG,OAAO,EAAE;YAC9BE,MAAM,EAACL,OAAO,CAACG,OAAO;YACtBG,QAAQ,EAACN,OAAO,CAACO,SAAS;YAC1BC,QAAQ,EAACR,OAAO,CAACS,SAAS;YAC1BC,UAAU,EAAC;UACf,CAAC,CAAC;QACN;QACArB,QAAQ,CAACK,GAAG,CAACM,OAAO,CAACG,OAAO,CAAC,CAACO,UAAU,CAACC,IAAI,CAAC;UACtCC,KAAK,EAACZ,OAAO,CAACa,MAAM;UACpBC,OAAO,EAACd,OAAO,CAACe;QACpB,CAAC,CAAC;MACV,CAAC,CAAC;MACFzB,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC,CAAC,CACD2B,KAAK,CAAEC,GAAG,IAAGzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC,CAAC;EAEnC,CAAC,EAAC,EAAE,CAAC;EACT,oBAEA/B,OAAA;IAAAgC,QAAA,eACIhC,OAAA;MAAOiC,SAAS,EAAC,2BAA2B;MAAAD,QAAA,eACxChC,OAAA;QAAAgC,QAAA,EACC7B,QAAQ,CAACU,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAAIf,OAAA,CAACF,QAAQ;UAAaqB,MAAM,EAAIL,OAAO,CAACK,MAAO;UAACC,QAAQ,EAAIN,OAAO,CAACM,QAAS;UAACE,QAAQ,EAAIR,OAAO,CAACQ,QAAS;UAACE,UAAU,EAAEV,OAAO,CAACU;QAAW,GAA5HT,KAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwH,CAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AACN;AAACnC,EAAA,CAtCQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}